{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","keyword","setKeyword","useState","history","useHistory","_jsxs","Form","onSubmit","e","preventDefault","push","location","pathname","inline","className","children","_jsx","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","Header","useSelector","darkMode","setDarkMode","useEffect","document","documentElement","classList","add","remove","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","removeItem","isAdmin","toggleDarkMode","setItem","Footer","Row","Col","Rating","_ref","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","addToCartHandler","disabled","review","createdAt","substring","createProductReview","productId","post","Group","controlId","Label","row","addToCart","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","successMessage","setSuccessMessage","setTimeout","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","placeOrder","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","addPayPalScript","script","createElement","onload","body","appendChild","Id","href","isDelivered","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","App","Router","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.df082f69.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBox() {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/?keyword=${keyword}&page=1`);\r\n    } else {\r\n      history.push(history.push(history.location.pathname));\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      onSubmit={submitHandler}\r\n      inline\r\n      className=\"flex items-center space-x-2\"\r\n    >\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        className=\"mr-sm-2 ml-sm-5 p-2 text-xl font-bold text-gray-900 dark:text-white bg-gray-200 dark:bg-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        placeholder=\"Search...\"\r\n      ></Form.Control>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"outline-success\"\r\n        className=\"p-2 bg-gray-300 dark:bg-gray-600 text-black dark:text-white rounded-lg hover:bg-gray-400 dark:hover:bg-gray-500 transition-all duration-200\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // Load dark mode preference from localStorage on mount\r\n  useEffect(() => {\r\n    const storedPreference = localStorage.getItem(\"theme\");\r\n    if (storedPreference === \"dark\") {\r\n      setDarkMode(true);\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      setDarkMode(false);\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, []);\r\n\r\n  // Toggle dark mode and store preference in localStorage\r\n  const toggleDarkMode = () => {\r\n    if (darkMode) {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    } else {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    }\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        bg={darkMode ? \"dark\" : \"light\"}\r\n        variant={darkMode ? \"dark\" : \"light\"}\r\n        expand=\"lg\"\r\n        collapseOnSelect\r\n        className=\"shadow-md transition-all duration-300\"\r\n      >\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n              StockEcom\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto items-center\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"text-gray-700 dark:text-gray-200 flex items-center\">\r\n                  <i className=\"fas fa-shopping-cart mr-2\"></i>\r\n                  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown\r\n                  title={userInfo.name}\r\n                  id=\"username\"\r\n                  className=\"text-gray-700 dark:text-gray-200\"\r\n                >\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link className=\"text-gray-700 dark:text-gray-200 flex items-center\">\r\n                    <i className=\"fas fa-user mr-2\"></i>\r\n                    Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown\r\n                  title=\"Admin\"\r\n                  id=\"adminmenu\"\r\n                  className=\"text-gray-700 dark:text-gray-200\"\r\n                >\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n\r\n              {/* Dark Mode Toggle Button */}\r\n              <button\r\n                onClick={toggleDarkMode}\r\n                className=\"ml-4 px-4 py-2 rounded-lg text-gray-700 dark:text-gray-200 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition-all duration-300\"\r\n              >\r\n                {darkMode ? (\r\n                  <i className=\"fas fa-sun\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-moon\"></i>\r\n                )}\r\n              </button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-light dark:bg-gray-800 text-gray-900 dark:text-gray-200 py-4 transition-all duration-300\">\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <p className=\"mb-0\">Copyright &copy; StockEcom</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-3\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color={\"#f8e825\"}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products, page, pages } = productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-black dark:text-white transition-all duration-300\">\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1 className=\"text-3xl font-bold my-4\">Latest Products</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    color={\"#f8e825\"}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className=\"btn-block\"\r\n                      disabled={product.countInStock === 0}\r\n                      type=\"button\"\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4>Reviews</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant=\"info\">No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color=\"#f8e825\" />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h4>Write a review</h4>\r\n\r\n                  {loadingProductReview && <Loader />}\r\n                  {successProductReview && (\r\n                    <Message variant=\"success\">Review Submitted</Message>\r\n                  )}\r\n                  {errorProductReview && (\r\n                    <Message variant=\"danger\">{errorProductReview}</Message>\r\n                  )}\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Review</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"5\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant=\"info\">\r\n                      Please <Link to=\"/login\">login</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className=\"text-gray-900 dark:text-white\">Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form\r\n        onSubmit={submitHandler}\r\n        className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg shadow-lg\"\r\n      >\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Email Address\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          className=\"bg-blue-500 dark:bg-blue-600 text-white rounded-lg hover:bg-blue-600 dark:hover:bg-blue-700 transition-all duration-200\"\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col className=\"text-gray-900 dark:text-white\">\r\n          New Customer?{\" \"}\r\n          <Link\r\n            to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            className=\"text-blue-500 dark:text-blue-400\"\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      // Show success message without Toastify\r\n      setSuccessMessage(`User ${name} registered successfully!`);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\"); // Clear message after 3 seconds\r\n        history.push(redirect); // Redirect after success\r\n      }, 3000);\r\n    }\r\n  }, [history, userInfo, redirect, name]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className=\"text-gray-900 dark:text-white\">Register</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      {successMessage && <Message variant=\"success\">{successMessage}</Message>}\r\n      <Form\r\n        onSubmit={submitHandler}\r\n        className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg shadow-lg\"\r\n      >\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Name\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Email Address\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\">\r\n          <Form.Label className=\"text-gray-900 dark:text-white\">\r\n            Confirm Password\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            className=\"bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white border-gray-300 dark:border-gray-600\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          className=\"bg-blue-500 dark:bg-blue-600 text-white rounded-lg hover:bg-blue-600 dark:hover:bg-blue-700 transition-all duration-200\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col className=\"text-gray-900 dark:text-white\">\r\n          Have an Account?{\" \"}\r\n          <Link\r\n            to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n            className=\"text-blue-500 dark:text-blue-400\"\r\n          >\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  // Calculate the total price of items in the cart\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  // Calculate shipping price: if itemPrice > 100 == 0 else 30% of itemPrice\r\n  cart.shippingPrice = (\r\n    cart.itemsPrice > 100 ? 0 : 0.3 * cart.itemsPrice\r\n  ).toFixed(2);\r\n\r\n  // Calculate tax price\r\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"  \"}\r\n                {cart.shippingAddress.postalCode},{\"  \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }) {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=Ad7-cjCQMTl3lcFfo3EntggQ4XIO0VghXVeeXz-EEyrCqb9DU9JU_bpFS_XDkknrUzd_F3Iti5Zlrdd0\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (\r\n      !order ||\r\n      successPay ||\r\n      order._id !== Number(orderId) ||\r\n      successDeliver\r\n    ) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order.Id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"  \"}\r\n                {order.shippingAddress.postalCode},{\"  \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n            {loadingDeliver && <Loader />}\r\n            {userInfo &&\r\n              userInfo.isAdmin &&\r\n              order.isPaid &&\r\n              !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn btn-block\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>Total</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/profile\" component={ProfileScreen} />\r\n          <Route path=\"/shipping\" component={ShippingScreen} />\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/product/:id\" component={ProductScreen} />\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />\r\n\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n\r\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}